{"ast":null,"code":"var _jsxFileName = \"/home/r/pr/Yandex_Praktikum/react-mesto-auth/src/components/MegaRouter.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport App from './App';\nimport Header from './Header';\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MegaRouter() {\n  _s();\n\n  const [loggedIn, setLoggedIn] = React.useState(false);\n\n  function handleLoginClick(e) {\n    /* функция при нажатие на кнопку */\n    e.preventDefault();\n    console.log(' -_- - > ');\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n      path: \"/\",\n      loggedIn: loggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/sign-in\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          title: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\",\n          link: \"/sign-up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Login, {\n          onLoginClick: handleLoginClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/sign-up\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          title: \"\\u0412\\u043E\\u0439\\u0442\\u0438\",\n          link: \"/sign-in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      children: loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/main\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/sign-in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 47\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n/*\n<Switch>\n  <Route path=\"/sign-in\">\n    <Header title='Регистрация'/>\n    <Enter title='Вход' subtitle='' buttonTitle='Войти' />\n  </Route>\n  <Route path=\"/sign-up\">\n    <Header title='Войти'/>\n    <Enter title='Регистрация' subtitle='Уже зарегистрированы? Войти' buttonTitle='Зарегистрироваться' />\n  </Route>\n</Switch>\n*/\n\n\n_s(MegaRouter, \"rumETxDPcQWJcg8a6Y55ZSVDz7g=\");\n\n_c = MegaRouter;\nexport default MegaRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"MegaRouter\");","map":{"version":3,"sources":["/home/r/pr/Yandex_Praktikum/react-mesto-auth/src/components/MegaRouter.js"],"names":["React","Route","Switch","Redirect","useHistory","App","Header","Login","Register","ProtectedRoute","MegaRouter","loggedIn","setLoggedIn","useState","handleLoginClick","e","preventDefault","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,UAAlC,QAAoD,kBAApD;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;;AAGA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,KAAK,CAACa,QAAN,CAAe,KAAf,CAAhC;;AAEA,WAASC,gBAAT,CAA0BC,CAA1B,EAA6B;AAAE;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;;AAED,sBACE;AAAA,4BACA,QAAC,cAAD;AACI,MAAA,IAAI,EAAC,GADT;AAEI,MAAA,QAAQ,EAAEP;AAFd;AAAA;AAAA;AAAA;AAAA,YADA,eAOA,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,oEAAd;AAA4B,UAAA,IAAI,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,YAAY,EAAEG;AAArB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPA,eAaA,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,gCAAd;AAAsB,UAAA,IAAI,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAbA,eAmBA,QAAC,KAAD;AAAA,gBACKH,QAAQ,gBAAG,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAH,gBAA6B,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAD1C;AAAA;AAAA;AAAA;AAAA,YAnBA;AAAA,kBADF;AAyBD;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GA/CSD,U;;KAAAA,U;AAgDT,eAAeA,UAAf","sourcesContent":["import React from 'react'\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom'\nimport App from './App'\nimport Header from './Header'\nimport Login from './Login'\nimport Register from './Register'\nimport ProtectedRoute from './ProtectedRoute'\n\n\nfunction MegaRouter() {\n  const [loggedIn, setLoggedIn] = React.useState(false);\n\n  function handleLoginClick(e) { /* функция при нажатие на кнопку */\n    e.preventDefault()\n    console.log(' -_- - > ')\n  }\n\n  return (\n    <>\n    <ProtectedRoute\n        path=\"/\"\n        loggedIn={loggedIn}\n\n\n    />\n    <Route path=\"/sign-in\">\n      <div className='page'>\n        <Header title='Регистрация' link='/sign-up' />\n        <Login onLoginClick={handleLoginClick}/>\n      </div>\n    </Route>\n    <Route path=\"/sign-up\">\n      <div className='page'>\n        <Header title='Войти' link='/sign-in' />\n        <Register />\n      </div>\n    </Route>\n    <Route>\n        {loggedIn ? <Redirect to=\"/main\" /> : <Redirect to=\"/sign-in\" />}\n    </Route>\n    </>\n  )\n}\n\n\n/*\n<Switch>\n  <Route path=\"/sign-in\">\n    <Header title='Регистрация'/>\n    <Enter title='Вход' subtitle='' buttonTitle='Войти' />\n  </Route>\n  <Route path=\"/sign-up\">\n    <Header title='Войти'/>\n    <Enter title='Регистрация' subtitle='Уже зарегистрированы? Войти' buttonTitle='Зарегистрироваться' />\n  </Route>\n</Switch>\n*/\nexport default MegaRouter\n"]},"metadata":{},"sourceType":"module"}
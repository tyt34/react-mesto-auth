{"ast":null,"code":"var _jsxFileName = \"/home/r/pr/Yandex_Praktikum/react-mesto-auth/src/components/MegaRouter.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom'; //import App from './App'\n\nimport Header from './Header';\nimport App from './App';\nimport Footer from './Footer';\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport * as auth from './Auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MegaRouter() {\n  _s();\n\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [userData, setUserData] = React.useState({\n    identifier: '',\n    password: ''\n  });\n  const history = useHistory();\n\n  function handleLoginClick(identifier, password) {\n    /* функция при нажатие на кнопку */\n    //e.preventDefault()\n    console.log('st -_-_- > ', identifier, password);\n    auth.authorize(identifier, password).then(obj => {\n      console.log('mr -_- > ', obj); //  тут получаем токен\n\n      console.log('mr jwt > ', obj.token);\n\n      if (obj.token) {\n        localStorage.setItem('jwt', obj.token);\n        /*\n        setUserData({\n          username: obj.user.username,\n          email: obj.user.email\n        })\n        */\n\n        setLoggedIn(true);\n        history.push('/');\n      }\n    }).catch(err => console.log(' er er -> ', err));\n  }\n\n  React.useEffect(() => {\n    tokenCheck();\n  }, []);\n\n  function tokenCheck() {\n    const jwt = localStorage.getItem('');\n\n    if (jwt) {\n      auth.getContent(jwt).then(res => {\n        if (res.email) {\n          setUserData({\n            username: res.username,\n            email: res.email\n          });\n          setLoggedIn(true);\n          history.push('/');\n        }\n      });\n    }\n  }\n\n  function handleRegClick(data) {\n    /* функция при нажатие на кнопку */\n    //e.preventDefault()\n    console.log('reg -_-_- > ', data);\n    auth.regg(data).then(obj => {\n      console.log('re -_- > ', obj);\n    }).catch(err => console.log(' erer -> ', err));\n  }\n\n  const MainComponent = {\n    render() {\n      /*#__PURE__*/\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true);\n    }\n\n  };\n  return /*#__PURE__*/_jsxDEV(MainComponent, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n/*\n<Switch>\n\n<Route path=\"/sign-in\">\n  <div className='page'>\n    <Header title='Регистрация' link='/sign-up' />\n    <Login onLoginClick={handleLoginClick}/>\n  </div>\n</Route>\n<Route path=\"/sign-up\">\n  <div className='page'>\n    <Header title='Войти' link='/sign-in' />\n    <Register onRegClick={handleRegClick}/>\n  </div>\n</Route>\n<ProtectedRoute\n    path=\"/\"\n    loggedIn={loggedIn}\n    component={MainComponent}\n/>\n<Route>\n    {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}\n</Route>\n</Switch>\n*/\n\n/*\n<Route>\n    {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}\n</Route>\n*/\n\n/*\n<Switch>\n  <Route path=\"/sign-in\">\n    <Header title='Регистрация'/>\n    <Enter title='Вход' subtitle='' buttonTitle='Войти' />\n  </Route>\n  <Route path=\"/sign-up\">\n    <Header title='Войти'/>\n    <Enter title='Регистрация' subtitle='Уже зарегистрированы? Войти' buttonTitle='Зарегистрироваться' />\n  </Route>\n</Switch>\n*/\n\n\n_s(MegaRouter, \"xtYEXphdCVoSLljcgRuC+oD2xz4=\", false, function () {\n  return [useHistory];\n});\n\n_c = MegaRouter;\nexport default MegaRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"MegaRouter\");","map":{"version":3,"sources":["/home/r/pr/Yandex_Praktikum/react-mesto-auth/src/components/MegaRouter.js"],"names":["React","Route","Switch","Redirect","useHistory","Header","App","Footer","Login","Register","ProtectedRoute","auth","MegaRouter","loggedIn","setLoggedIn","useState","userData","setUserData","identifier","password","history","handleLoginClick","console","log","authorize","then","obj","token","localStorage","setItem","push","catch","err","useEffect","tokenCheck","jwt","getItem","getContent","res","email","username","handleRegClick","data","regg","MainComponent","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Route, Switch, Redirect, useHistory} from 'react-router-dom'\n//import App from './App'\nimport Header from './Header'\nimport App from './App'\nimport Footer from './Footer'\nimport Login from './Login'\nimport Register from './Register'\nimport ProtectedRoute from './ProtectedRoute'\nimport * as auth from './Auth';\n\n\nfunction MegaRouter() {\n  const [loggedIn, setLoggedIn] = React.useState(false)\n  const [userData, setUserData] = React.useState({\n    identifier: '',\n    password: ''\n  })\n  const history = useHistory()\n\n  function handleLoginClick(identifier, password) { /* функция при нажатие на кнопку */\n    //e.preventDefault()\n    console.log('st -_-_- > ', identifier, password)\n    auth.authorize(identifier, password)\n      .then(obj => {\n        console.log('mr -_- > ', obj) //  тут получаем токен\n        console.log('mr jwt > ', obj.token)\n        if (obj.token) {\n          localStorage.setItem('jwt', obj.token)\n          /*\n          setUserData({\n            username: obj.user.username,\n            email: obj.user.email\n          })\n          */\n          setLoggedIn(true);\n          history.push('/')\n        }\n      })\n      .catch( err => console.log(' er er -> ', err))\n  }\n\n  React.useEffect(() => {\n    tokenCheck();\n  }, []);\n\n  function tokenCheck() {\n    const jwt = localStorage.getItem('')\n\n    if (jwt){\n      auth.getContent(jwt).then( (res) => {\n        if (res.email) {\n          setUserData({\n            username: res.username,\n            email: res.email\n          });\n          setLoggedIn(true);\n          history.push('/')\n        }\n      })\n    }\n  }\n\n  function handleRegClick(data) { /* функция при нажатие на кнопку */\n    //e.preventDefault()\n    console.log('reg -_-_- > ', data)\n    auth.regg(data)\n      .then(obj => {\n        console.log('re -_- > ', obj)\n      })\n      .catch( err => console.log(' erer -> ', err))\n  }\n\n  const MainComponent = {\n    render() {\n      <>\n      <Header />\n      <App />\n      <Footer />\n      </>\n    }\n  }\n\n  return (\n    <MainComponent/>\n  )\n}\n\n\n/*\n<Switch>\n\n<Route path=\"/sign-in\">\n  <div className='page'>\n    <Header title='Регистрация' link='/sign-up' />\n    <Login onLoginClick={handleLoginClick}/>\n  </div>\n</Route>\n<Route path=\"/sign-up\">\n  <div className='page'>\n    <Header title='Войти' link='/sign-in' />\n    <Register onRegClick={handleRegClick}/>\n  </div>\n</Route>\n<ProtectedRoute\n    path=\"/\"\n    loggedIn={loggedIn}\n    component={MainComponent}\n/>\n<Route>\n    {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}\n</Route>\n</Switch>\n*/\n\n/*\n<Route>\n    {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}\n</Route>\n*/\n\n\n/*\n<Switch>\n  <Route path=\"/sign-in\">\n    <Header title='Регистрация'/>\n    <Enter title='Вход' subtitle='' buttonTitle='Войти' />\n  </Route>\n  <Route path=\"/sign-up\">\n    <Header title='Войти'/>\n    <Enter title='Регистрация' subtitle='Уже зарегистрированы? Войти' buttonTitle='Зарегистрироваться' />\n  </Route>\n</Switch>\n*/\nexport default MegaRouter\n"]},"metadata":{},"sourceType":"module"}
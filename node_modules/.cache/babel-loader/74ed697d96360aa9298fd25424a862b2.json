{"ast":null,"code":"//import {options} from '../utils/constants.js';\nconst options = {\n  token: '54e47a58-a3be-4854-bdb0-d150680efc4c',\n  cohortId: 'cohort-24',\n  myId: \"34f519f4db31bcdefd2e9e7c\",\n  url: 'https://mesto.nomoreparties.co'\n};\n\nclass Api {\n  constructor(options) {\n    this._token = options.token;\n    this._cohortId = options.cohortId;\n    this._url = options.url;\n    this._me = '/v1/' + this._cohortId + '/users/me';\n    this._ava = this._me + '/avatar';\n    this._cards = '/v1/' + this._cohortId + '/cards';\n    this._likes = this._url + this._cards + '/likes/';\n  }\n\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    return res.json();\n  }\n\n  getUserInfo() {\n    return fetch(this._url + this._me, {\n      headers: {\n        authorization: this._token\n      }\n    }).then(res => this._getResponseData(res));\n  }\n\n  getCardsFromServer() {\n    return fetch(this._url + this._cards, {\n      headers: {\n        authorization: this._token\n      }\n    }).then(res => this._getResponseData(res));\n  }\n\n  changeAvatar(link) {\n    return fetch(this._url + this._ava, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: link.link\n      })\n    }).then(res => this._getResponseData(res));\n  }\n\n  loadProfile(obj) {\n    return fetch(this._url + this._me, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: obj.name,\n        about: obj.about\n      })\n    }).then(res => this._getResponseData(res));\n  }\n\n  loadNewCard(obj) {\n    return fetch(this._url + this._cards, {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: obj.name,\n        link: obj.link\n      })\n    }).then(res => this._getResponseData(res));\n  }\n\n  delCard(id) {\n    return fetch(this._url + this._cards + '/' + id, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token\n      }\n    }).then(res => this._getResponseData(res));\n  }\n\n  changeLikeCardStatus(id, method) {\n    return fetch(this._likes + id, {\n      method: method,\n      headers: {\n        authorization: this._token\n      }\n    }).then(res => this._getResponseData(res));\n  }\n  /*\n  sendLike(id, method) {\n    return fetch(this._likes+id, {\n      method: method, // 'PUT'\n      headers: {\n        authorization: this._token\n      }\n    }).then(\n      (res) => this._getResponseData(res)\n    )\n  }\n  */\n\n  /*\n  sendDislike(id) {\n    return fetch(this._likes+id, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token\n      }\n    }).then(\n      (res) => this._getResponseData(res)\n    )\n  }\n  */\n\n\n}\n\nconst api = new Api(options);\nexport default api;","map":{"version":3,"sources":["/home/r/pr/Yandex_Praktikum/react-mesto-auth/src/utils/api.js"],"names":["options","token","cohortId","myId","url","Api","constructor","_token","_cohortId","_url","_me","_ava","_cards","_likes","_getResponseData","res","ok","Promise","reject","status","json","getUserInfo","fetch","headers","authorization","then","getCardsFromServer","changeAvatar","link","method","body","JSON","stringify","avatar","loadProfile","obj","name","about","loadNewCard","delCard","id","changeLikeCardStatus","api"],"mappings":"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","sourcesContent":["//import {options} from '../utils/constants.js';\n\nconst options = {\n  token: '54e47a58-a3be-4854-bdb0-d150680efc4c',\n  cohortId: 'cohort-24',\n  myId: \"34f519f4db31bcdefd2e9e7c\",\n  url: 'https://mesto.nomoreparties.co',\n}\n\nclass Api {\n  constructor(options) {\n    this._token = options.token\n    this._cohortId = options.cohortId\n\n    this._url = options.url\n    this._me = '/v1/'+this._cohortId+'/users/me'\n    this._ava = this._me+'/avatar'\n    this._cards = '/v1/'+this._cohortId+'/cards'\n    this._likes = this._url+this._cards+'/likes/'\n  }\n\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`)\n    }\n    return res.json()\n  }\n\n  getUserInfo() {\n    return fetch(this._url+this._me, {\n      headers: {\n        authorization: this._token\n      }\n    }).then(\n      (res) => this._getResponseData(res)\n    )\n  }\n\n  getCardsFromServer() {\n    return fetch(this._url+this._cards, {\n        headers: {\n          authorization: this._token\n        }\n    }).then(\n      (res) => this._getResponseData(res)\n    )\n  }\n\n  changeAvatar(link) {\n    return fetch(this._url+this._ava, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: link.link\n      })\n    }).then(\n      (res) => this._getResponseData(res)\n    )\n  }\n\n  loadProfile(obj) {\n    return fetch(this._url+this._me, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: obj.name,\n        about: obj.about,\n      })\n    }).then(\n      (res) => this._getResponseData(res)\n    )\n  }\n\n  loadNewCard(obj) {\n    return fetch(this._url+this._cards, {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: obj.name,\n        link: obj.link,\n      })\n    }).then(\n      (res) => this._getResponseData(res)\n    )\n  }\n\n  delCard(id) {\n    return fetch(this._url+this._cards+'/'+id, {\n      method: 'DELETE',\n      headers: {\n          authorization: this._token\n        }\n      }).then(\n        (res) => this._getResponseData(res)\n      )\n  }\n\n  changeLikeCardStatus(id, method) {\n    return fetch(this._likes+id, {\n      method: method,\n      headers: {\n        authorization: this._token\n      }\n    }).then(\n      (res) => this._getResponseData(res)\n    )\n  }\n  /*\n  sendLike(id, method) {\n    return fetch(this._likes+id, {\n      method: method, // 'PUT'\n      headers: {\n        authorization: this._token\n      }\n    }).then(\n      (res) => this._getResponseData(res)\n    )\n  }\n  */\n  /*\n  sendDislike(id) {\n    return fetch(this._likes+id, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token\n      }\n    }).then(\n      (res) => this._getResponseData(res)\n    )\n  }\n  */\n}\n\nconst api = new Api(options)\nexport default api\n"]},"metadata":{},"sourceType":"module"}
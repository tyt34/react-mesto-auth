{"ast":null,"code":"export const BASE_URL = 'https://api.nomoreparties.co';\n\nconst handleResponse = response => response.ok ? response.json() : Promise.reject(`Ошибка ${response.status}`);\n\nexport const authorize = (identifier, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: {\n      password: password,\n      email: identifier\n    }\n  }).then(handleResponse);\n}; //JSON.stringify({identifier, password})\n\n/*\nreturn fetch(this._url+this._cards, {\n  method: 'POST',\n  headers: {\n    authorization: this._token,\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    name: obj.name,\n    link: obj.link,\n  })\n}).then(\n  (res) => this._getResponseData(res)\n)\n*/","map":{"version":3,"sources":["/home/r/pr/Yandex_Praktikum/react-mesto-auth/src/components/Auth.js"],"names":["BASE_URL","handleResponse","response","ok","json","Promise","reject","status","authorize","identifier","password","fetch","method","headers","body","email","then"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,8BAAjB;;AAEP,MAAMC,cAAc,GAAGC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,GAAcD,QAAQ,CAACE,IAAT,EAAd,GAAgCC,OAAO,CAACC,MAAR,CAAgB,UAASJ,QAAQ,CAACK,MAAO,EAAzC,CAAnE;;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,UAAD,EAAaC,QAAb,KAA0B;AACjD,SAAOC,KAAK,CAAE,GAAEX,QAAS,SAAb,EAAuB;AACjCY,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFwB;AAKjCC,IAAAA,IAAI,EAAE;AACJJ,MAAAA,QAAQ,EAAEA,QADN;AAEJK,MAAAA,KAAK,EAAEN;AAFH;AAL2B,GAAvB,CAAL,CAUNO,IAVM,CAUDf,cAVC,CAAP;AAWD,CAZM,C,CAaP;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["export const BASE_URL = 'https://api.nomoreparties.co';\n\nconst handleResponse = response => response.ok ? response.json() : Promise.reject(`Ошибка ${response.status}`);\n\nexport const authorize = (identifier, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: {\n      password: password,\n      email: identifier,\n    }\n  })\n  .then(handleResponse)\n}\n//JSON.stringify({identifier, password})\n/*\nreturn fetch(this._url+this._cards, {\n  method: 'POST',\n  headers: {\n    authorization: this._token,\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    name: obj.name,\n    link: obj.link,\n  })\n}).then(\n  (res) => this._getResponseData(res)\n)\n*/\n"]},"metadata":{},"sourceType":"module"}